{"version":3,"sources":["components/Order/Order.module.css","components/Order/Order.js","containers/Orders/Orders.js"],"names":["module","exports","order","props","ingredients","ingredientName","push","name","amount","ingredientsOutput","map","ig","key","style","textTransform","display","margin","border","padding","className","classes","Order","Number","parseFloat","price","toFixed","Orders","this","onFetchOrders","token","userId","orders","id","Component","connect","state","auth","dispatch","actions","withErrorHandler","axios"],"mappings":"mHACAA,EAAOC,QAAU,CAAC,MAAQ,uB,iHCgCXC,EA9BD,SAACC,GACd,IAAIC,EAAc,GAClB,IAAI,IAAIC,KAAkBF,EAAMC,YAC5BA,EAAYE,KAAK,CACbC,KAAMF,EACNG,OAAQL,EAAMC,YAAYC,KAIlC,IAAII,EAAoBL,EAAYM,KAAI,SAAAC,GACrC,OACA,0BACAC,IAAKD,EAAGJ,KACTM,MAAO,CACHC,cAAe,aACfC,QAAS,eACTC,OAAQ,QACRC,OAAQ,iBACRC,QAAS,QAASP,EAAGJ,KAPxB,KAOgCI,EAAGH,OAPnC,QAWD,OACC,yBAAKW,UAAWC,IAAQC,OACnB,2CAAiBZ,GAClB,qCAAU,uCAAaa,OAAOC,WAAWpB,EAAMqB,OAAOC,QAAQ,O,gCCrBhEC,E,4LAEEC,KAAKxB,MAAMyB,cAAcD,KAAKxB,MAAM0B,MAAOF,KAAKxB,MAAM2B,U,+BAItD,IAAIC,EAAS,KAUb,OATGJ,KAAKxB,MAAM4B,SAAWA,IACrBA,EAASJ,KAAKxB,MAAM4B,OAAOrB,KAAI,SAAAR,GAAK,OAChC,kBAACmB,EAAD,CACAT,IAAKV,EAAM8B,GACX5B,YAAaF,EAAME,YACnBoB,MAAOtB,EAAMsB,YAIdO,M,GAhBME,aAkCNC,uBAdS,SAAAC,GACpB,MAAO,CACHJ,OAAQI,EAAMjC,MAAM6B,OACpBF,MAAOM,EAAMC,KAAKP,MAClBC,OAAQK,EAAMC,KAAKN,WAIA,SAAAO,GACvB,MAAO,CACHT,cAAe,SAACC,EAAOC,GAAR,OAAmBO,EAASC,IAAoBT,EAAOC,QAI/DI,CAA6CK,YAAiBb,EAAQc","file":"static/js/5.75e7c6c7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__24naj\"};","import React from 'react';\r\nimport classes from './Order.module.css';\r\n\r\nconst order = (props) => {\r\n let ingredients = [];\r\n for(let ingredientName in props.ingredients) {\r\n     ingredients.push({\r\n         name: ingredientName,\r\n         amount: props.ingredients[ingredientName]\r\n     });\r\n };\r\n\r\n let ingredientsOutput = ingredients.map(ig => {\r\n    return (\r\n    <span \r\n    key={ig.name}\r\n   style={{\r\n       textTransform: 'capitalize', \r\n       display: 'inline-block',\r\n       margin: '0 8px', \r\n       border: '1px solid #ccc', \r\n       padding: '5px'}}>{ig.name} ({ig.amount})</span>       \r\n    );\r\n });\r\n\r\n   return (\r\n    <div className={classes.Order}>    \r\n         <p>Ingredients: {ingredientsOutput}</p>\r\n        <p>Price: <strong>USD {Number.parseFloat(props.price).toFixed(2)}</strong></p>\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default order;","import React, { Component } from \"react\";\r\nimport Order from \"../../components/Order/Order\";\r\nimport axios from \"../../axios-orders\";\r\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../store/actions/main\";\r\n\r\nclass Orders extends Component {    \r\n    componentDidMount() {\r\n        this.props.onFetchOrders(this.props.token, this.props.userId);\r\n    };\r\n\r\n    render() {\r\n        let orders = null;\r\n        if(this.props.orders !== orders) {\r\n            orders = this.props.orders.map(order => (\r\n                <Order \r\n                key={order.id} \r\n                ingredients={order.ingredients}\r\n                price={order.price}\r\n                />\r\n            ));\r\n        }\r\n        return orders;\r\n    }\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        orders: state.order.orders,\r\n        token: state.auth.token,\r\n        userId: state.auth.userId\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchOrders: (token, userId) => dispatch(actions.fetchOrders(token, userId))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));"],"sourceRoot":""}