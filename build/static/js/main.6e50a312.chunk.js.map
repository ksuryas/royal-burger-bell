{"version":3,"sources":["store/actions/actionTypes.js","shared/utils/utils.js","shared/utils/validation.js","shared/utils/allUtils.js","hoc/Auxilliary/Auxilliary.js","store/actions/burgerBuilder.js","store/actions/order.js","store/actions/auth.js","store/actions/main.js","components/Burger/BurgerIngredient/BurgerIngredient.module.css","components/UI/Button/Button.js","axios-orders.js","components/Navigation/SideDrawer/SideDrawer.module.css","components/BuildControls/BuildControl/BuildControl.module.css","components/UI/Backdrop/Backdrop.js","components/UI/Modal/Modal.js","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/NavigationItem/NavigationItem.module.css","components/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","hoc/withErrorHandler/withErrorHandler.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","hoc/Layout/Layout.module.css","assets/images/burger-logo.png","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","components/UI/Intro/Intro.module.css","components/UI/ThankYou/ThankYou.module.css","components/Logo/Logo.js","components/Navigation/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/BuildControls/BuildControl/BuildControl.js","components/BuildControls/BuildControls.js","components/Burger/OrderSummary/OrderSummary.js","components/UI/Spinner/Spinner.js","containers/BurgerBuilder/BurgerBuilder.js","components/UI/Intro/Card/Card.js","components/UI/Intro/lntro.js","components/UI/ThankYou/ThankYou.js","containers/Auth/Logout/Logout.js","hoc/asyncComponent/asyncComponent.js","App.js","serviceWorker.js","store/reducer/burgerBuilder.js","store/reducer/order.js","store/reducer/auth.js","index.js"],"names":["ADD_INGREDIENT","REMOVE_INGREDIENT","RESET_INGREDIENT","SET_INGREDIENTS","FETCH_FAILED_INGS","FETCH_ORDERS_START","FETCH_ORDERS_SUCCESS","FETCH_ORDERS_FAIL","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","SET_AUTH_REDIRECT_PATH","PURCHASE_BURGER_START","PURCHASE_BURGER_SUCCESS","PURCHASE_BURGER_FAIL","PURCHASE_INIT","updateObject","oldObj","newProps","checkValidity","value","rules","isValid","required","trim","maxLength","length","isEmail","test","isNumeric","aux","props","children","addIngredient","name","type","actionTypes","ingredientName","removeIngredient","resetIngredient","initIngredients","dispatch","axios","get","then","response","ings","data","catch","error","fetchFailedIngs","purchaseBurger","orderData","token","post","id","orderId","purchaseBurgerSuccess","purchaseBurgerFail","purchaseInit","fetchOrders","userId","queryParams","orders","fetchedOrders","key","push","fetchOrdersFail","authSuccess","idToken","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","setTimeout","auth","email","password","inSignupMode","authData","returnSecureToken","url","expirationDate","Date","getTime","expiresIn","setItem","localId","authFail","setAuthRedirectPath","path","authCheckState","getItem","authTimeout","module","exports","button","href","goTo","className","classes","Button","btnType","join","onClick","clicked","disabled","instance","create","baseURL","backdrop","show","Backdrop","Modal","nextProps","nextState","this","modalClosed","style","transform","opacity","Component","withErrorHandler","WrappedComponent","state","errorConfirmedHandler","setState","reqInterceptor","interceptors","request","use","req","resInterceptor","res","eject","message","BurgerIngredient","ingredient","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Bacon","Salad","Avacados","Tofu","burger","transformedIngredients","Object","keys","ingredients","map","igKey","Array","_","i","reduce","arr","el","concat","Burger","logo","Logo","src","burgerLogo","alt","navigationItem","NavigationItem","activeClassName","active","exact","to","link","navigationItems","NavigationItems","isAuth","drawerToggle","DrawerToggle","toolbar","Toolbar","toggleSideDrawer","height","marginBottom","DesktopOnly","sideDrawer","attachedClasses","SideDrawer","Close","open","Open","closed","Layout","showSideDrawer","sideDrawerClosedHandler","sideDrawerToggleHandler","prevState","isAuthenticated","Content","connect","buildControl","BuildControl","Label","label","Add","added","Remove","removed","Reset","reset","controls","buildControls","BuildControls","color","price","ctrl","onIngredientAdded","onIngredientRemoved","resetBurger","ordered","OrderButton","purchaseable","orderSummary","ingredientSummary","textTransform","beforeTax","tax","cancelled","continued","spinner","Loader","textAlign","BurgerBuilder","purchasing","purchaseHandler","onSetAuthRedirectPath","history","purchaseContinueHandler","onInitPurchase","purchaseCancelHandler","onInitIngredients","sum","disabledInfo","toFixed","Spinner","onResetIngs","updatePurchaseState","OrderSummary","burgerBuilder","totalPrice","ingName","actions","card","description","Intro","navigateHandler","fontSize","Card","thankYou","ThankYou","Logout","onLogout","asyncComponent","importComponent","component","cmp","default","C","asyncCheckout","asyncAuth","asyncOrders","App","onTryAutoSignup","routes","render","routeProps","withRouter","Boolean","window","location","hostname","match","initialState","building","ingredientPrices","salad","cheese","meat","bacon","avacados","tofu","addIng","action","updatedIngredient","updatedState","utils","removeIng","updatedIngredient2","updatedState2","resetIng","updatedIngredient3","updatedState3","setIngs","burgerBuilderReducer","loading","purchased","newOrder","orderReducer","authRedirectPath","authReducer","composeEnhancers","compose","rootReducer","combineReducers","order","store","createStore","applyMiddleware","thunk","app","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6e50a312.chunk.js","sourcesContent":["export const ADD_INGREDIENT = 'ADD_INGREDIENT';\r\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\r\nexport const RESET_INGREDIENT = 'RESET_INGREDIENT';\r\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS';\r\nexport const FETCH_FAILED_INGS = 'FETCH_FAILED_INGS';\r\n\r\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\r\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\r\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL';\r\nexport const DELETE_ORDERS = 'DELETE_ORDERS';\r\n\r\nexport const AUTH_START = 'AUTH_START';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_FAIL = 'AUTH_FAIL';\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\r\nexport const SET_AUTH_REDIRECT_PATH = 'SET_AUTH_REDIRECT_PATH';\r\n\r\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\r\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\r\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\r\nexport const PURCHASE_INIT = 'PURCHASE_INIT';","export const updateObject = (oldObj, newProps) => {\r\n        return {\r\n            ...oldObj,\r\n            ...newProps\r\n        };\r\n};","export const checkValidity = (value, rules) => {\r\n    let isValid = true;\r\n        if(rules.required) {\r\n            isValid = value.trim() !== '' && isValid;\r\n    }\r\n\r\n    if(rules.maxLength) {\r\n        isValid = value.length <= rules.maxLength && isValid;\r\n    }\r\n\r\n    if(rules.isEmail) {\r\n        const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\r\n        isValid = pattern.test(value) && isValid;\r\n    }\r\n\r\n    if(rules.isNumeric) {\r\n        const pattern = /^\\d+$/;\r\n        isValid = pattern.test(value) && isValid;\r\n    }\r\n\r\n    return isValid;\r\n };","export { updateObject } from './utils';\r\nexport { checkValidity } from './validation';","const aux = (props) => props.children;\r\nexport default aux;","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-orders';\r\n\r\nexport const addIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.ADD_INGREDIENT,\r\n        ingredientName: name\r\n    };\r\n};\r\n\r\nexport const removeIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.REMOVE_INGREDIENT,\r\n        ingredientName: name\r\n    };\r\n};\r\n\r\nexport const resetIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.RESET_INGREDIENT,\r\n        ingredientName: name\r\n    };\r\n};\r\n\r\nexport const setIngredients = (ings) =>  {\r\nreturn {\r\n    type: actionTypes.SET_INGREDIENTS,\r\n    ings: ings\r\n};\r\n};\r\n\r\nexport const fetchFailedIngs = (error) => {\r\nreturn {\r\n    type: actionTypes.FETCH_FAILED_INGS,\r\n    error: error\r\n};\r\n};\r\n\r\nexport const initIngredients = () => {\r\n    return dispatch => {\r\n        axios.get('https://mcburger-reactjs-app.firebaseio.com/ingredients.json')\r\n.then(response => {\r\n        dispatch(setIngredients(response.data));\r\n})\r\n.catch(error => {\r\ndispatch(fetchFailedIngs(error));\r\n});\r\n};\r\n};","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-orders';\r\n\r\nexport const purchaseBurgerSuccess = (id, orderData) => {\r\n    return {\r\n    type: actionTypes.PURCHASE_BURGER_SUCCESS,\r\n    orderId: id,\r\n    orderData: orderData\r\n};\r\n};\r\n\r\nexport const purchaseBurgerFail = (error) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_FAIL,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const purchaseBurgerStart = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_START\r\n    };\r\n};\r\n\r\nexport const purchaseBurger = (orderData, token) => {\r\n    return dispatch => {\r\n        dispatch(purchaseBurgerStart());        \r\n        axios.post('/orders.json?auth=' + token, orderData)\r\n        .then(response => {\r\n            dispatch(purchaseBurgerSuccess(response.data.name, orderData));\r\n        })\r\n        .catch(error => {\r\n            dispatch(purchaseBurgerFail(error));\r\n      });\r\n    };\r\n};\r\n\r\nexport const purchaseInit = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_INIT\r\n    }\r\n};\r\n\r\nexport const fetchOrdersSuccess = (orders) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_START,\r\n        orders: orders\r\n    };\r\n};\r\n\r\nexport const fetchOrdersFail = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_START,\r\n        error: error\r\n    };\r\n};\r\n\r\nexport const fetchOrdersStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_START\r\n    };\r\n};\r\n\r\nexport const fetchOrders = (token, userId) => {\r\n    return dispatch => {\r\n        dispatch(fetchOrdersStart());\r\n        const queryParams = '?auth=' + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"';\r\n        axios.get('/orders.json' + queryParams)\r\n        .then(response => {\r\n            let fetchedOrders = [];\r\n            for(let key in response.data) {\r\n                fetchedOrders.push({\r\n                    ...response.data[key],\r\n                    id: key\r\n                });\r\n                }\r\n                dispatch(fetchOrdersSuccess(fetchedOrders));\r\n        })\r\n        .catch(error => {\r\n            dispatch(fetchOrdersFail(error));\r\n        });\r\n    };\r\n};","import * as actionTypes from './actionTypes';\r\nimport axios from 'axios';\r\n\r\nexport const authStart = () => {\r\n    return {\r\n        type: actionTypes.AUTH_START \r\n    };\r\n};\r\n\r\nexport const authSuccess = (token, userId) => {\r\n    return {\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        idToken: token,\r\n        userId: userId\r\n    };\r\n};\r\n\r\nexport const authFail = (error) => {\r\n    return {\r\n        type: actionTypes.AUTH_FAIL,\r\n        error: error \r\n    };\r\n};\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expirationDate');\r\n    localStorage.removeItem('userId');\r\n    return {\r\n        type: actionTypes.AUTH_LOGOUT\r\n    };\r\n};\r\n\r\nexport const checkAuthTimeout = (expirationTime) => {\r\nreturn dispatch => {\r\n    setTimeout(() => {\r\n    dispatch(logout());\r\n    }, expirationTime * 1000);\r\n };\r\n};\r\n\r\nexport const auth = (email, password, inSignupMode) => {\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        let authData = {\r\n            email: email,\r\n            password: password,\r\n            returnSecureToken: true\r\n        };\r\n        let url = 'https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAYEjYvDiZPquoPA0oD2WOjfV6QQ6VS5HM';\r\n        if(!inSignupMode) {\r\n            url = 'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAYEjYvDiZPquoPA0oD2WOjfV6QQ6VS5HM'; \r\n         }\r\n        axios.post(url, authData)\r\n        .then(response => {\r\n            const expirationDate = new Date(new Date().getTime() + response.data.expiresIn * 1000);\r\n            localStorage.setItem('token', response.data.idToken);\r\n            localStorage.setItem('expirationDate', expirationDate);\r\n            localStorage.setItem('userId', response.data.localId);\r\n            dispatch(authSuccess(response.data.idToken, response.data.localId));\r\n            dispatch(checkAuthTimeout(response.data.expiresIn));\r\n        })\r\n        .catch(error => {\r\n            dispatch(authFail(error.response.data.error));\r\n        });\r\n    };\r\n};\r\n\r\nexport const setAuthRedirectPath = (path) => {\r\n    return {\r\n        type: actionTypes.SET_AUTH_REDIRECT_PATH,\r\n        path: path\r\n    };\r\n};\r\n\r\nexport const authCheckState = () => {\r\n    return dispatch => {\r\n            const token = localStorage.getItem('token');\r\n            if(!token) {\r\n                dispatch(logout());\r\n            } else {\r\n                const expirationDate = new Date(localStorage.getItem('expirationDate'));\r\n                if(expirationDate <= new Date()) {\r\n                    dispatch(logout());\r\n                } else {\r\n                const userId = localStorage.getItem('userId');\r\n                const authTimeout = expirationDate.getTime() - new Date().getTime();\r\n                dispatch(authSuccess(token, userId));\r\n                dispatch(checkAuthTimeout(authTimeout / 1000));\r\n                }\r\n            }  \r\n    };\r\n};","export { addIngredient, removeIngredient, resetIngredient, initIngredients} from './burgerBuilder';\r\n\r\nexport { purchaseBurger, purchaseInit, fetchOrders, purchaseBurgerSuccess } from './order';\r\n\r\nexport { auth, logout, setAuthRedirectPath, authCheckState } from './auth';","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__34mgP\",\"BreadTop\":\"BurgerIngredient_BreadTop__2qCoR\",\"Seeds1\":\"BurgerIngredient_Seeds1__1T-jF\",\"Seeds2\":\"BurgerIngredient_Seeds2__3D-5Z\",\"Meat\":\"BurgerIngredient_Meat__1STMv\",\"Cheese\":\"BurgerIngredient_Cheese__26d5V\",\"Salad\":\"BurgerIngredient_Salad__Tpq8B\",\"Bacon\":\"BurgerIngredient_Bacon__3c4sS\",\"Tofu\":\"BurgerIngredient_Tofu__3L7T2\",\"Avacados\":\"BurgerIngredient_Avacados__2Ovfm\"};","import React from 'react';\r\nimport classes from './Button.module.css';\r\n\r\nconst button = (props) => (\r\n<a href={props.goTo}>\r\n<button\r\nclassName={[classes.Button, classes[props.btnType]].join(' ')}\r\nonClick={props.clicked}\r\ndisabled={props.disabled}>{props.children}</button></a>\r\n);\r\n\r\nexport default button;","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://mcburger-reactjs-app.firebaseio.com'\r\n});\r\n\r\nexport default instance;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__1DIiy\",\"Open\":\"SideDrawer_Open__eAWza\",\"Close\":\"SideDrawer_Close__1cwS_\",\"Logo\":\"SideDrawer_Logo__1H9O-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__mcap3\",\"Label\":\"BuildControl_Label__1RFHi\",\"Reset\":\"BuildControl_Reset__3fBfJ\",\"Remove\":\"BuildControl_Remove__3CyAp\",\"Add\":\"BuildControl_Add__27XGd\"};","import React from 'react';\r\nimport classes from './Backdrop.module.css';\r\n\r\nconst backdrop = (props) => (\r\nprops.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\r\n);\r\nexport default backdrop;","import React, { Component } from 'react';\r\nimport classes from './Modal.module.css';\r\nimport Aux from '../../../hoc/Auxilliary/Auxilliary';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\n\r\nclass Modal extends Component {\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\r\n}\r\n\r\n    render() {\r\n        return (      \r\n<Aux>\r\n<Backdrop show={this.props.show} clicked={this.props.modalClosed} />\r\n<div \r\nstyle={{\r\n    transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n    opacity: this.props.show ? '1' : '0'\r\n}}\r\nclassName={classes.Modal}>\r\n    {this.props.children}\r\n</div>\r\n</Aux>\r\n);\r\n}\r\n}\r\n\r\nexport default Modal;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__3wQ-H\",\"Logo\":\"Toolbar_Logo__2APC4\",\"DesktopOnly\":\"Toolbar_DesktopOnly__28fHU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__1QjxP\",\"active\":\"NavigationItem_active__1EaqL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__1GfHn\",\"OrderButton\":\"BuildControls_OrderButton__2TDJ7\",\"enable\":\"BuildControls_enable__1U4bP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__Yybfu\",\"Success\":\"Button_Success__2Qcwz\",\"Danger\":\"Button_Danger__1IxUJ\"};","import React, { Component } from 'react';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport Aux from '../Auxilliary/Auxilliary';\r\n\r\nconst withErrorHandler = (WrappedComponent, axios) => {\r\n    return class extends Component {\r\n        state = {\r\n            error: null\r\n        };\r\n\r\n        componentWillMount() {\r\n            this.reqInterceptor = axios.interceptors.request.use(req => {\r\n                return req;\r\n         });\r\n             this.resInterceptor = axios.interceptors.response.use(res => res, error => {\r\n                this.setState({error: error});\r\n         });\r\n        };\r\n    \r\n        componentWillUnmount() {\r\n            axios.interceptors.request.eject(this.reqInterceptor);\r\n            axios.interceptors.response.eject(this.resInterceptor);\r\n        };\r\n\r\n        errorConfirmedHandler = () => {\r\n            this.setState({error: null});\r\n        };\r\n    \r\n        render () {\r\n            return (\r\n                <Aux>\r\n                <Modal show={this.state.error} modalClosed={this.errorConfirmedHandler}>\r\n                    {this.state.error ? this.state.error.message : null}\r\n                </Modal>\r\n                <WrappedComponent {...this.props} />\r\n                </Aux>\r\n            );      \r\n        }\r\n    };    \r\n};\r\n\r\nexport default withErrorHandler;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport classes from './BurgerIngredient.module.css';\r\n\r\nclass BurgerIngredient extends Component {\r\n    render () {\r\n        let ingredient = null;\r\n        switch ( this.props.type ) {\r\n            case ( 'bread-bottom' ):\r\n                ingredient = <div className={classes.BreadBottom}></div>;\r\n                break;\r\n            case ( 'bread-top' ):\r\n                ingredient = (\r\n                    <div className={classes.BreadTop}>\r\n                        <div className={classes.Seeds1}></div>\r\n                        <div className={classes.Seeds2}></div>\r\n                    </div>\r\n                );\r\n                break;\r\n            case ( 'meat' ):\r\n                ingredient = <div className={classes.Meat}></div>;\r\n                break;\r\n            case ( 'cheese' ):\r\n                ingredient = <div className={classes.Cheese}></div>;\r\n                break;\r\n            case ( 'bacon' ):\r\n                ingredient = <div className={classes.Bacon}></div>;\r\n                break;\r\n            case ( 'salad' ):\r\n                ingredient = <div className={classes.Salad}></div>;\r\n                break;\r\n            case ( 'avacados' ): \r\n            ingredient = <div className={classes.Avacados}></div>;\r\n            break;\r\n            case ( 'tofu' ): \r\n            ingredient = <div className={classes.Tofu}></div>;\r\n            break;\r\n            default:\r\n                ingredient = null;\r\n        }\r\n        return ingredient;\r\n    }\r\n}\r\n\r\nBurgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired\r\n};\r\n\r\nexport default BurgerIngredient;","import React from 'react';\r\n\r\nimport classes from './Burger.module.css';\r\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\r\n\r\nconst burger = ( props ) => {\r\n    let transformedIngredients = Object.keys( props.ingredients )\r\n        .map( igKey => {\r\n            return [...Array( props.ingredients[igKey] )].map( ( _, i ) => {\r\n                return <BurgerIngredient key={igKey + i} type={igKey} />;\r\n            } );\r\n        })\r\n        .reduce((arr, el) => {\r\n            return arr.concat(el)\r\n        }, []);\r\n     if (transformedIngredients.length === 0) {\r\n         transformedIngredients = <p>Please start adding ingredients!</p>;\r\n    }\r\n   \r\nreturn (\r\n        <div className={classes.Burger}>\r\n            <BurgerIngredient type=\"bread-top\" />\r\n            {transformedIngredients}\r\n            <BurgerIngredient type=\"bread-bottom\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default burger;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__HYPGC\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__120D0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__2AEnu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__3Ugm-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3AF8M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__3jXMT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__25ZFZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__mdTX9\",\"load2\":\"Spinner_load2__3JDbf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Intro\":\"Intro_Intro__2DTZK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ThankYou\":\"ThankYou_ThankYou__3nXoH\"};","import React from 'react';\r\nimport burgerLogo from '../../assets/images/burger-logo.png';\r\nimport classes from './Logo.module.css';\r\n\r\nconst logo = () => (\r\n    <div className={classes.Logo}>\r\n        <a href=\"/\"><img src={burgerLogo} alt=\"Logo of Royal Burger Bell\" /></a>\r\n    </div>\r\n);\r\n\r\nexport default logo;","import React from 'react';\r\nimport classes from './NavigationItem.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst navigationItem = (props) => (\r\n        <li className={classes.NavigationItem}>\r\n            <NavLink activeClassName={classes.active} exact={props.exact} to={props.link}>{props.children}</NavLink>\r\n        </li>\r\n);\r\n\r\nexport default navigationItem;","import React from 'react';\r\nimport classes from './NavigationItems.module.css';\r\nimport NavigationItem from '../NavigationItem/NavigationItem';\r\n\r\nconst navigationItems = (props) => (\r\n    <ul className={classes.NavigationItems}>\r\n    <NavigationItem link=\"/\" exact>Home - RBB</NavigationItem>\r\n    <NavigationItem link=\"/burger-builder\">Burger Builder</NavigationItem>\r\n    { props.isAuth ? <NavigationItem link=\"/orders\">My Orders</NavigationItem> : null }\r\n    {!props.isAuth ? <NavigationItem link=\"/auth\">Authenticate</NavigationItem> \r\n    : <NavigationItem link=\"/logout\">Logout</NavigationItem> \r\n    }\r\n    </ul>\r\n);\r\n\r\nexport default navigationItems;","import React from 'react';\r\nimport classes from './DrawerToggle.module.css';\r\n\r\nconst drawerToggle = (props) => (\r\n    <div className={classes.DrawerToggle} onClick={props.clicked}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n);\r\n\r\nexport default drawerToggle;","import React from 'react';\r\nimport classes from './Toolbar.module.css';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\r\nconst toolbar = (props) => (\r\n<header className={classes.Toolbar}>\r\n    <DrawerToggle clicked={props.toggleSideDrawer} />\r\n    <div className={classes.Logo}>\r\n    <Logo height=\"80%\" marginBottom=\"0px\" />\r\n    </div>  \r\n    <nav className={classes.DesktopOnly}>\r\n    <NavigationItems isAuth={props.isAuth} />\r\n    </nav>\r\n</header>\r\n);\r\n\r\nexport default toolbar;","import React from 'react';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport classes from './SideDrawer.module.css';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\nimport Aux from '../../../hoc/Auxilliary/Auxilliary';\r\n\r\nconst sideDrawer = (props) => {\r\nlet attachedClasses = [classes.SideDrawer, classes.Close];\r\nif(props.open) {\r\n    attachedClasses = [classes.SideDrawer, classes.Open];\r\n}\r\n\r\nreturn (\r\n<Aux>  \r\n    <Backdrop show={props.open} clicked={props.closed} />\r\n    <div className={attachedClasses.join(' ')} onClick={props.closed}>\r\n        <div className={classes.Logo}>\r\n            <Logo />\r\n        </div>\r\n   \r\n    <nav>\r\n        <NavigationItems isAuth={props.isAuth}/>\r\n        </nav>\r\n    </div>\r\n    </Aux>\r\n  \r\n);\r\n};\r\n\r\nexport default sideDrawer;","import React, { Component } from 'react';\r\nimport classes from './Layout.module.css';\r\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\r\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\r\nimport Aux from '../Auxilliary/Auxilliary';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Layout extends Component {\r\nstate = {\r\n    showSideDrawer: false\r\n}\r\nsideDrawerClosedHandler = () => {\r\nthis.setState({showSideDrawer: false});\r\n};\r\n\r\nsideDrawerToggleHandler = () => {\r\nthis.setState((prevState) => {\r\n    return {showSideDrawer: !prevState.showSideDrawer};\r\n});\r\n};\r\n\r\nrender() {\r\n    return (\r\n<Aux>\r\n<Toolbar isAuth={this.props.isAuthenticated} toggleSideDrawer={this.sideDrawerToggleHandler} />\r\n<SideDrawer isAuth={this.props.isAuthenticated} open={this.state.showSideDrawer} closed={this.sideDrawerClosedHandler} />\r\n<main className={classes.Content}>\r\n    {this.props.children}\r\n</main>\r\n</Aux>\r\n\r\n);\r\n}\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isAuthenticated: state.auth.token !== null\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Layout);","import React from 'react';\r\nimport classes from './BuildControl.module.css';\r\n\r\nconst buildControl = (props) => (\r\n<div className={classes.BuildControl}>\r\n    <div className={classes.Label}>{props.label}</div>\r\n    <button className={classes.Add} onClick={props.added}>Add</button>\r\n    <button className={classes.Remove} onClick={props.removed} disabled={props.disabled}>Remove</button>\r\n    <button className={classes.Reset} onClick={props.reset} disabled={props.disabled}>Reset</button>\r\n    </div>\r\n);\r\n\r\nexport default buildControl;","import React from 'react';\r\nimport classes from './BuildControls.module.css';\r\nimport BuildControl from './BuildControl/BuildControl';\r\n\r\nconst controls = [\r\n    {label: 'Salad', type: 'salad'},\r\n    {label: 'Cheese', type: 'cheese'},\r\n    {label: 'Avacados', type: 'avacados'},\r\n    {label: 'Tofu', type: 'tofu'},\r\n    {label: 'Meat', type: 'meat'},\r\n    {label: 'Bacon', type: 'bacon'}\r\n];\r\n\r\nconst buildControls = (props) => (\r\n    <div className={classes.BuildControls}>\r\n            <p>Current Price: <strong style={{color: 'green'}}>{'$' + props.price}</strong></p>\r\n            {controls.map(ctrl => (\r\n            <BuildControl \r\n            added={() => props.onIngredientAdded(ctrl.type)} \r\n            removed={() => props.onIngredientRemoved(ctrl.type)}\r\n            reset={() => props.resetBurger(ctrl.type)}\r\n            disabled={props.disabled[ctrl.type]}\r\n            key={ctrl.label} \r\n            label={ctrl.label}\r\n            />\r\n        ))}  \r\n        <button \r\n        onClick={props.ordered}\r\n        className={classes.OrderButton} \r\n        disabled={!props.purchaseable}>{props.isAuth ? 'ORDER NOW' : 'Signup or sign in to continue!'}</button>\r\n    </div>\r\n);\r\n\r\n\r\nexport default buildControls;","import React from 'react';\r\nimport Aux from '../../../hoc/Auxilliary/Auxilliary';\r\nimport Button from '../../UI/Button/Button';\r\n\r\nconst orderSummary = (props) => {\r\n    const ingredientSummary = Object.keys(props.ingredients)\r\n    .map(igKey => {\r\n        return (\r\n            <li key={igKey}>\r\n            <span style={{textTransform: 'capitalize'}}>{igKey}: {props.ingredients[igKey]}</span>\r\n            </li>        \r\n        );\r\n      });\r\nreturn (\r\n    <Aux>\r\n        <h3>Your Order</h3>\r\n        <p>A delicious burger with the following ingredients:</p>\r\n    <ul>\r\n   {ingredientSummary}\r\n    </ul>\r\n   <div>\r\n   <p><strong>Before Tax Price: {'$' + props.beforeTax}</strong></p>\r\n   <p><strong>Total Tax: {'$' + props.tax}</strong></p>\r\n   <p><strong style={{color: 'green'}}>Total Price: {'$' + props.price}</strong></p>\r\n   <p>Continue to Checkout?</p>\r\n   </div>\r\n\r\n    <Button btnType=\"Danger\" clicked={props.cancelled}>CANCEL</Button>\r\n    <Button btnType=\"Success\" clicked={props.continued}>CONTINUE</Button>\r\n    </Aux>\r\n);\r\n};\r\n\r\nexport default orderSummary;","import React from 'react';\r\nimport classes from './Spinner.module.css';\r\n\r\nconst spinner = () => (\r\n    <div className={classes.Loader} style={{textAlign: 'center'}}>Loading...</div>\r\n);\r\n\r\nexport default spinner;","import React, { Component } from 'react';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport Aux from '../../hoc/Auxilliary/Auxilliary';\r\nimport axios from '../../axios-orders';\r\nimport BuildControls from '../../components/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../store/actions/main';\r\n\r\nclass BurgerBuilder extends Component {\r\n    state = { \r\n        purchaseable: false,\r\n        purchasing: false\r\n    }; \r\n\r\ncomponentDidMount() {\r\n    this.props.onInitIngredients();\r\n};\r\n\r\npurchaseHandler = () => {\r\n  if(this.props.isAuthenticated) {  \r\n  this.setState({purchasing: true});\r\n  } else {\r\n      this.props.onSetAuthRedirectPath('/checkout');\r\n      this.props.history.push('/auth');\r\n  }\r\n};\r\n\r\n purchaseContinueHandler = () => {\r\n    this.props.onInitPurchase();\r\n    this.props.history.push('/checkout');\r\n};\r\n\r\npurchaseCancelHandler = () => {\r\n    this.setState({purchasing: false});\r\n};\r\n\r\nupdatePurchaseState(ingredients) {\r\n     const sum = Object.keys(ingredients).map(igKey => {\r\n            return ingredients[igKey];\r\n        }).reduce((sum, el) => {\r\n            return sum + el;\r\n        }, 0);\r\n        return sum > 0;\r\n};\r\n  render () {\r\n      const disabledInfo = {\r\n          ...this.props.ings\r\n      };\r\n      \r\n      for(let key in disabledInfo) {\r\n          disabledInfo[key] = disabledInfo[key] <= 0;\r\n      }\r\n       \r\n      let orderSummary = null;\r\n      let tax = 0.08 * this.props.price;  \r\n      let price = this.props.price + tax.toFixed(2);\r\n      let burger = this.props.error ? <p style={{textAlign: 'center', color: 'red'}}>Sorry, the burger ingredients can't be loaded!</p> : <Spinner />;\r\n      \r\n       if(this.props.ings) {\r\n        burger = (\r\n            <Aux>\r\n                <Burger ingredients={this.props.ings} />\r\n                <BuildControls \r\n                 onIngredientAdded={this.props.onIngredientAdded} \r\n                 onIngredientRemoved={this.props.onIngredientRemoved} \r\n                 disabled={disabledInfo} \r\n                 price={this.props.price}\r\n                 resetBurger={this.props.onResetIngs}\r\n                 isAuth={this.props.isAuthenticated}\r\n                 purchaseable={this.updatePurchaseState(this.props.ings)}\r\n                 ordered={this.purchaseHandler} />\r\n            </Aux>\r\n        ); \r\n           orderSummary = <OrderSummary \r\n           beforeTax={this.props.price}\r\n           tax={tax.toFixed(2)}\r\n           price={price}\r\n           cancelled={this.purchaseCancelHandler}\r\n           continued={this.purchaseContinueHandler}\r\n           ingredients={this.props.ings} />\r\n       }\r\n       return (\r\n    <Aux>\r\n  <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}> \r\n    {orderSummary}\r\n    </Modal>  \r\n       {burger}\r\n    </Aux>\r\n );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\nreturn {\r\n    ings: state.burgerBuilder.ingredients,\r\n    price: state.burgerBuilder.totalPrice.toFixed(2),\r\n    error: state.burgerBuilder.error,\r\n    isAuthenticated: state.auth.token !== null\r\n};\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\nreturn {\r\n    onIngredientAdded: (ingName) => dispatch(actions.addIngredient(ingName)),\r\n    onIngredientRemoved: (ingName) => dispatch(actions.removeIngredient(ingName)),\r\n    onResetIngs: (ingName) => dispatch(actions.resetIngredient(ingName)),\r\n    onInitIngredients: () => dispatch(actions.initIngredients()),\r\n    onInitPurchase: () => dispatch(actions.purchaseInit()),\r\n    onSetAuthRedirectPath: (path) => dispatch(actions.setAuthRedirectPath(path))\r\n};\r\n};\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));","import React from 'react';\r\n\r\nconst card = (props) => (\r\n<div style={{textAlign: 'center'}}>\r\n<h1>{props.name}</h1>\r\n<h3>{props.description}</h3>\r\n\r\n<select>\r\n    <option>\r\n        Like this review?\r\n             </option>    \r\n        <option>\r\n        I like this review!\r\n        </option>\r\n        <option>\r\n        I don't like this review!\r\n        </option>\r\n    </select>\r\n    </div>\r\n);\r\n\r\nexport default card;","import React, { Component } from 'react';\r\nimport classes from './Intro.module.css';\r\nimport Card from './Card/Card';\r\nimport Button from '../Button/Button';\r\n\r\nclass Intro extends Component {\r\n    navigateHandler = () => {\r\n    this.props.history.push('/burger-builder');  \r\n   };\r\n\r\n    render() {\r\n    return (\r\n    <div className={classes.Intro}>\r\n    <h1>Welcome to the Royal Burger Bell (RBB), User!</h1> \r\n    <h4>The best burger ever with #1 quality! Way tastier than McDonald burgers!</h4>\r\n    <h3>Make your own burger by pressing the button below and order it right now:</h3>\r\n        <Button btnType=\"Success\" style={{fontSize: 'larger'}} clicked={this.navigateHandler}>Make a burger!</Button>    \r\n        <h2>Reviews of our app:</h2>\r\n        <Card name=\"Bob Smith\" description=\"I love this thing! You should order a burger, man! They are delicious.\" />\r\n        <Card name=\"Jason\" description=\"It's all awesome. The burgers are delicious. Their customer service is awesome too!\" />\r\n        <Card name=\"Jagdeesh\" description=\"I loved it, man! Burgers are mouth-watery!!\" />\r\n        </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Intro;","import React, { Component } from 'react';\r\nimport Button from '../Button/Button';\r\nimport classes from './ThankYou.module.css';\r\n\r\nclass thankYou extends Component {\r\n    navigateHandler = () => {\r\n      this.props.history.push('/burger-builder');  \r\n    };\r\n    render() {\r\n    return (\r\n  <div className={classes.ThankYou}>\r\n    <h1>Your order has been confirmed!</h1>\r\n    <h2>Thank you for ordering a burger.</h2>\r\n    <h5>Delivery Time: <strong style={{color: 'skyBlue'}}>1 hour and 2 minutes</strong></h5>\r\n    <h4>Delivery Delays?: <strong>No!</strong></h4>\r\n    <h3>We hope to see you again:</h3>\r\n    <Button btnType=\"Success\" clicked={this.navigateHandler}>Make another burger!</Button>\r\n    <Button btnType=\"Danger\" goTo=\"https://tinyurl.com/wpgler7\">Give Feedback!</Button>\r\n    </div>\r\n);\r\n};\r\n};\r\n\r\nexport default thankYou;","import React, { Component } from 'react';\r\nimport * as actions from '../../../store/actions/main';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Logout extends Component {\r\n    componentDidMount() {\r\n        this.props.onLogout();\r\n    };\r\n    render() {\r\n        return <Redirect to=\"/auth\" />;\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onLogout: () => dispatch(actions.logout())\r\n    }\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout);","import React, { Component } from 'react'; \r\n\r\nconst asyncComponent = (importComponent) => {\r\n    return class extends Component {\r\n        state = {\r\n            component: null\r\n        };\r\n        componentDidMount() {\r\n            importComponent().then(cmp => {\r\n                this.setState({component: cmp.default});\r\n            });\r\n        };\r\n\r\n        render() {\r\n            const C = this.state.component;\r\n            return C ? <C {...this.props} /> : null;\r\n        };\r\n    };\r\n};\r\n\r\nexport default asyncComponent;","import React, { Component } from 'react';\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom';\nimport Layout from './hoc/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Intro from './components/UI/Intro/lntro';\nimport ThankYou from './components/UI/ThankYou/ThankYou';\n// import notFoundPage from './components/UI/notFoundPage/notFoundPage';\nimport Logout from './containers/Auth/Logout/Logout';\nimport * as actions from './store/actions/main';\nimport { connect } from 'react-redux';\nimport asyncComponent from './hoc/asyncComponent/asyncComponent';\n\nconst asyncCheckout = asyncComponent(() => {\n  return import('./containers/BurgerBuilder/Checkout/Checkout');\n});\n\nconst asyncAuth = asyncComponent(() => {\n  return import('./containers/Auth/Auth');\n});\n\nconst asyncOrders = asyncComponent(() => {\n  return import('./containers/Orders/Orders');\n});\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onTryAutoSignup();\n  };\n\n   render() {\n     let routes = (\n       <Switch>\n         <Route path=\"/\" exact component={Intro} />  \n         <Route path=\"/auth\" component={asyncAuth} />\n          <Route path=\"/burger-builder\" render={(routeProps) => <BurgerBuilder {...routeProps} />} />   \n          <Redirect to=\"/burger-builder\" />\n       </Switch>\n     );\n\n     if(this.props.isAuth) {\n       routes = (\n         <Switch>\n         <Route path=\"/\" exact component={Intro} />\n         <Route path=\"/auth\" component={asyncAuth} /> \n         <Route path=\"/logout\" component={Logout} />\n        <Route path=\"/burger-builder\" render={(routeProps) => <BurgerBuilder {...routeProps} />} />   \n        <Route path=\"/checkout\" component={asyncCheckout} />\n        <Route path=\"/orders\" component={asyncOrders} />\n        <Route path=\"/thank-you\" component={ThankYou} />\n        <Redirect to=\"/burger-builder\" />\n        </Switch>\n       );\n     }\n    return (\n      <div>\n        <Layout>\n          {routes}      \n        </Layout>\n    </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuth: state.auth.token !== null\n  }\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch(actions.authCheckState())\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from  '../actions/actionTypes';\r\nimport * as utils from '../../shared/utils/allUtils';\r\n\r\nconst initialState = {\r\n    ingredients: null,\r\n    totalPrice: 0,\r\n    error: false,\r\n    building: false\r\n};\r\n\r\nconst ingredientPrices = {\r\n    salad: 0.2,\r\n    cheese: 0.5,\r\n    meat: 1,\r\n    bacon: 1.82,\r\n    avacados: 1.16,\r\n    tofu: 1.92\r\n};\r\n\r\nconst addIng = (state, action) => {\r\n    let updatedIngredient = { [action.ingredientName]: state.ingredients[action.ingredientName] + 1 };\r\n    let updatedIngredients = utils.updateObject(state.ingredients, updatedIngredient);\r\n    let updatedState = {\r\n        ingredients: updatedIngredients,\r\n        totalPrice: state.totalPrice + ingredientPrices[action.ingredientName],\r\n        building: true\r\n    };\r\n    return utils.updateObject(state, updatedState);\r\n};\r\n\r\nconst removeIng = (state, action) => {\r\n    let updatedIngredient2 = { [action.ingredientName]: state.ingredients[action.ingredientName] - 1 };\r\n    let updatedIngredients2 = utils.updateObject(state.ingredients, updatedIngredient2);\r\n    let updatedState2 = {\r\n        ingredients: updatedIngredients2,\r\n        totalPrice: state.totalPrice - ingredientPrices[action.ingredientName],\r\n        building: true\r\n    };\r\n    return utils.updateObject(state, updatedState2);\r\n};\r\n\r\nconst resetIng = (state, action) => {\r\n    let updatedIngredient3 = { [action.ingredientName]: state.ingredients[action.ingredientName] - state.ingredients[action.ingredientName] };\r\n    let updatedIngredients3 = utils.updateObject(state.ingredients, updatedIngredient3);\r\n    let updatedState3 = {\r\n        ingredients: updatedIngredients3,\r\n        totalPrice: state.totalPrice - ingredientPrices[action.ingredientName] * state.ingredients[action.ingredientName],\r\n        building: true\r\n    };\r\n    return utils.updateObject(state, updatedState3);\r\n};\r\n\r\nconst setIngs = (state) => {\r\n    return utils.updateObject(state, {\r\n        ingredients: {\r\n            salad: 0,\r\n            cheese: 0,\r\n            avacados: 0,\r\n            tofu: 0,\r\n            meat: 0,\r\n            bacon: 0\r\n        },\r\n        error: false,\r\n        totalPrice: 0,\r\n        building: false\r\n    });\r\n}; \r\n\r\nconst burgerBuilderReducer = (state = initialState, action) => {\r\nswitch(action.type) {\r\n    case(actionTypes.ADD_INGREDIENT):\r\n    return addIng(state, action);\r\n\r\n    case(actionTypes.REMOVE_INGREDIENT):\r\n    return removeIng(state, action);\r\n    \r\n    case(actionTypes.RESET_INGREDIENT):\r\n    return resetIng(state, action);\r\n\r\n    case(actionTypes.FETCH_FAILED_INGS): \r\n    return utils.updateObject(state, {error: true});\r\n   \r\n    case(actionTypes.SET_INGREDIENTS): \r\n        return setIngs(state); \r\n\r\n    default:\r\n        return state;\r\n    }\r\n  };\r\n\r\nexport default burgerBuilderReducer;","import * as actionTypes from '../actions/actionTypes';\r\nimport * as utils from '../../shared/utils/allUtils';\r\n\r\nconst initialState = {\r\n    orders: [],\r\n    loading: true,\r\n    purchased: false   \r\n};\r\n\r\nconst purchaseBurgerSuccess = (state, action) => {\r\nconst newOrder = utils.updateObject(action.orderData, {id: action.orderId});\r\n   return utils.updateObject(state, {\r\n       loading: false,\r\n       purchased: true, \r\n       orders: state.orders.concat(newOrder)\r\n    });\r\n};\r\n\r\nconst orderReducer = (state = initialState, action) => {\r\nswitch(action.type) {\r\n    default:\r\n        return state;\r\n    case(actionTypes.PURCHASE_INIT):\r\n    return utils.updateObject(state, {purchased: false});\r\n  \r\n    case(actionTypes.PURCHASE_BURGER_START):\r\n    return utils.updateObject(state, {loading: true});\r\n  \r\n    case(actionTypes.PURCHASE_BURGER_FAIL):\r\n    return utils.updateObject(state, {loading: false});\r\n  \r\n    case(actionTypes.PURCHASE_BURGER_SUCCESS):\r\n    return purchaseBurgerSuccess(state, action);\r\n\r\n    case(actionTypes.FETCH_ORDERS_SUCCESS):\r\n    return utils.updateObject(state, {orders: [action.orders], loading: false});\r\n   \r\n    case(actionTypes.FETCH_ORDERS_START):\r\n    return utils.updateObject(state, {loading: true});\r\n  \r\n    case(actionTypes.FETCH_ORDERS_FAIL):\r\n     return utils.updateObject(state, {loading: false});\r\n  };\r\n};\r\n\r\nexport default orderReducer;","import * as actionTypes from '../actions/actionTypes';\r\nimport * as utils from '../../shared/utils/allUtils';\r\n\r\nconst initialState = {\r\n    token: null,\r\n    userId: null,\r\n    error: null, \r\n    authRedirectPath: '/burger-builder'\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\nswitch(action.type) {\r\n    case(actionTypes.AUTH_START):\r\n    return utils.updateObject(state, { error: null });\r\n\r\n    case(actionTypes.AUTH_FAIL):\r\n    return utils.updateObject(state, { error: action.error });\r\n\r\n    case(actionTypes.AUTH_SUCCESS):\r\n    return utils.updateObject(state, {\r\n        token: action.idToken,\r\n        userId: action.userId,\r\n        error: null\r\n    });\r\n    \r\n    case(actionTypes.AUTH_LOGOUT):\r\n    return utils.updateObject(state, { token: null, userId: null });\r\n\r\n    case(actionTypes.SET_AUTH_REDIRECT_PATH):\r\n    return utils.updateObject(state, { authRedirectPath: action.path });\r\n    \r\n    default:\r\n        return state;\r\n};\r\n};\r\n\r\nexport default authReducer;","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport ReactDOM from 'react-dom';\nimport thunk from 'redux-thunk'; \nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport burgerBuilderReducer from './store/reducer/burgerBuilder';\nimport orderReducer from './store/reducer/order';\nimport { createStore, compose, applyMiddleware, combineReducers } from 'redux';\nimport authReducer from './store/reducer/auth';\n\nconst composeEnhancers = process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : null || compose;\n\nconst rootReducer = combineReducers({\nburgerBuilder: burgerBuilderReducer,\norder: orderReducer,\nauth: authReducer\n});\n\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n\nconst app = (\n<Provider store={store}>\n<BrowserRouter>\n    <App />\n</BrowserRouter>\n</Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\nserviceWorker.unregister();"],"sourceRoot":""}